schema {
  query: Query
  mutation: Mutation
}

type Transaction {
  balance: Float!
  delta: Float!
  date: AWSDateTime!
  description: String!
}

type Account {
  balance: Float!
  active: Boolean!
  transactions: [Transaction!]!
}

type accountEnvelop {
  result: Account!
  time: AWSDateTime!
}

type Query {
  getAccountByUserId(userId: ID!): accountEnvelop
}

type voidEnvelop {
  time: String!
}

type Mutation {
  createTransaction(
    userId: ID!
    description: String!
    delta: Float!
  ): voidEnvelop
  transfer(
    fromUserId: ID!
    toUserId: ID!
    quantity: Float!
    fromDescription: String!
    toDescription: String
  ): voidEnvelop
}
