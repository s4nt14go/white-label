schema {
    query: Query
    mutation: Mutation
}

type Transaction {
    balance: Float!
    delta: Float!
    date: String!
    description: String!
}

type Account {
    balance: Float!
    active: Boolean!
    transactions: [Transaction]!
}

type accountEnvelop {
    result: Account!,
    time: String!,
}

type Query {
    getAccountByUserId(userId: String!): accountEnvelop
}

type voidEnvelop {
    time: String!,
}

type Mutation {
    createTransaction(userId: String!, description: String!, delta: Float!): voidEnvelop
}